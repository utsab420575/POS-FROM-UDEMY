**********************************************************36. User Roles and Permission************************************************

--------------------------------------------------------1. Install Laravel Spatie Permission-------------------------------------------
step1: 1. Install the Package
	composer require spatie/laravel-permission

step2: 2. Publish Config & Migrations
	php artisan vendor:publish --provider="Spatie\Permission\PermissionServiceProvider"

This will create:
	config/permission.php

	Migrations for roles, permissions, and pivot tables
	
step3: 3. Run Migrations
	php artisan migrate
	
##############################################installation done#################################################




------------------------------------------------------2. Setup User Permission Part 1----------------------------------------------------
এখানে আমরা ‍permission show/add/edit/update/delete করব ।

Show এর কাজ:

কাজ শুরু করার পৃর্বে আমরা permission table কে একটু পরিবর্তন করব। group name assign করব যাতে group এ ক্লিক করলে ঐই group এর সব permission automatically select হয়।
	php artisan make:migration add_group_name_to_permissions_table


	public function up(): void
    {
        Schema::table('permissions', function (Blueprint $table) {
            $table->string('group_name')->nullable()->after('name');
        });
    }
	
	public function down(): void
    {
        Schema::table('permissions', function (Blueprint $table) {
            $table->dropColumn('group_name');
        });
    }


1.controller:
	$ php artisan make:controller RoleController

1.route:
	///Permission All Route More actions
    Route::controller(RoleController::class)->group(function(){

        Route::get('/all/permission','AllPermission')->name('all.permission');


    });
	



2.controller method:
	//showing all permission
    public function AllPermission(){

        $permissions = Permission::all();
        return view('backend.pages.permission.all_permission',compact('permissions'));

    }


//return from : $permissions = Permission::all();
Illuminate\Support\Collection {
	[
		App\Models\Permission {
			id: 1,
			name: "products.view",
			group_name: "Product",
			guard_name: "web",
			created_at: "2024-01-01 12:00:00",
			updated_at: "2024-01-01 12:00:00"
		},
		App\Models\Permission {
			id: 2,
			name: "products.create",
			group_name: "Product",
			guard_name: "web",
			created_at: "2024-01-01 12:01:00",
			updated_at: "2024-01-01 12:01:00"
		},
		// more...
	]
}

| id | name            | group\_name | guard\_name | created\_at         |
| -- | --------------- | ----------- | ----------- | ------------------- |
| 1  | products.view   | Product     | web         | 2024-01-01 12:00:00 |
| 2  | products.create | Product     | web         | 2024-01-01 12:01:00 |
| 3  | customers.view  | Customer    | web         | 2024-01-01 12:02:00 |
| 4  | suppliers.edit  | Supplier    | web         | 2024-01-01 12:03:00 |


	
3.view all permission in blade:(উপরের permission table এর ডাটাগুলো blade এ show করাব:)
	$ php artisan make:view backend.pages.permission.all_permission

4.blade view:(all this data show in  blade)(guard_name is web by default)


5.sidebar এ মেনুগুলো তৈরি করব।
	<li>
		<a href="#permission" data-bs-toggle="collapse">
			<i class="mdi mdi-email-multiple-outline"></i>
			<span> Roles And Permission  </span>
			<span class="menu-arrow"></span>
		</a>
		<div class="collapse" id="permission">
			<ul class="nav-second-level">
				<li>
					<a href="{{ route('all.permission') }}">All Permission </a>
				</li>

			</ul>
		</div>
	</li>


	
	

--------------------------------------------3. Setup User Permission Part 2-----------------------------------
এখানে all_permission.blade এ থাকা 'Add Permission' এ ক্লিক করলে নতুন একটি blade open হবে এবং এখান থেকে সব permission দেয়া যাবে।
permission গুলো permission table এ store হবে।


1.route :
	Route::get('/add/permission','AddPermission')->name('add.permission');
	Route::post('/store/permission','StorePermission')->name('permission.store');

2.controller method:
	
	//permission group name show
	public function AddPermission(){
        return view('backend.pages.permission.add_permission');
    } // End Method


	//after selecting group name,permission name data store into permission table
    public function StorePermission(Request $request){


		//this method from spaite for create permission
        $role = Permission::create([
            'name' => $request->name,
            'group_name' => $request->group_name,

        ]);

        $notification = array(
            'message' => 'Permission Added Successfully',
            'alert-type' => 'success'
        );

        return redirect()->route('all.permission')->with($notification);

    }// End Method
	

3.make view:(এখান থেকে মূলত permission গুলো প্রদর্শন এবং স্টোর এর কাজ করব।)
	 php artisan make:view backend.pages.permission.add_permission
	 
	 



----------------------------------------------------------------------------------
এখানে আমরা web.php file কে আপডেট করছি।যাতে করে গ্রুপিং সহজে করা যায়।
সব project এ আমরা এভাবে routing করব।





------------------------------here we send all permission to database using database seeder---------------------
1.seeder
	php artisan make:seeder PermissionSeeder
This will create a file at:
	database/seeders/PermissionSeeder.php
	

2.সব permission গুলো PermissionSeeder.php তে দিয়ে দিব:
	class PermissionSeeder extends Seeder
	{
		public function run(): void
		{
			$permissions = [
				// Employee
				['name' => 'employee.all', 'group_name' => 'employee'],
				['name' => 'employee.add', 'group_name' => 'employee'],
				['name' => 'employee.store', 'group_name' => 'employee'],
				['name' => 'employee.edit', 'group_name' => 'employee'],
				['name' => 'employee.update', 'group_name' => 'employee'],
				['name' => 'employee.delete', 'group_name' => 'employee'],
				
				---
				---
			
			foreach ($permissions as $permission) {
				Permission::create([
					'name' => $permission['name'],
					'group_name' => $permission['group_name'],
					'guard_name' => 'web',
					'created_at' => Carbon::now(),
				]);
			}
		}
	}
	

3.run:
	php artisan db:seed --class=PermissionSeeder




-------------------------------------------------4. Setup User Permission Part 3----------------------
এখানে আমরা permission edit/update/delete করব।

1.route:
	 Route::get('/permission/edit/{id}','EditPermission')->name('permission.edit');
     Route::post('/permission/update','UpdatePermission')->name('permission.update');
     Route::get('/permission/delete/{id}','DeletePermission')->name('permission.delete');
	 
2.edit,update,delete এর জন্য method:
	 public function EditPermission($id)
    {

        $permission = Permission::findOrFail($id);
        return view('backend.pages.permission.edit_permission', compact('permission'));

    }// End Method

    public function UpdatePermission(Request $request)
    {

        $per_id = $request->id;

        Permission::findOrFail($per_id)->update([
            'name' => $request->name,
            'group_name' => $request->group_name,

        ]);

        $notification = array(
            'message' => 'Permission Updated Successfully',
            'alert-type' => 'success'
        );

        return redirect()->route('all.permission')->with($notification);

    }// End Method


    public function DeletePermission($id)
    {

        Permission::findOrFail($id)->delete();

        $notification = array(
            'message' => 'Permission Deleted Successfully',
            'alert-type' => 'success'
        );

        return redirect()->back()->with($notification);

    }// End Method
	

3.এখন blade বানাব edit করার জন্য:
	php artisan make:view backend.pages.permission.edit_permission
	
4.all_permission.blade এ route গুলো পরিবর্তন করে দিব:
	<td>
		<a href="{{ route('permission.edit',$item->id) }}" class="btn btn-blue rounded-pill waves-effect waves-light">Edit</a>
		<a href="{{ route('permission.delete',$item->id) }}" class="btn btn-danger rounded-pill waves-effect waves-light" id="delete">Delete</a>

	</td>
	
	










----------------------------------------------------5. Setup User Roles Part 1---------------------------------------------
এখানে permission এর মত Role Add করা হবে। যেহেতু এখানে শুধুমাত্র 'name' field add করতে হবে তাই Blade দিয়ে add করব।



1.route:
	Route::get('/all/roles','AllRoles')->name('all.roles');More actions
	Route::get('/add/roles','AddRoles')->name('add.roles');
	Route::post('/store/roles','StoreRoles')->name('roles.store');
	


2.controller method:
	public function AllRoles()
    {

        $roles = Role::all();
        return view('backend.pages.roles.all_roles', compact('roles'));

    }// End Method


    public function AddRoles()
    {

        return view('backend.pages.roles.add_roles');

    }// End Method


    public function StoreRoles(Request $request)
    {

        $role = Role::create([
            'name' => $request->name,

        ]);

        $notification = array(
            'message' => 'Role Added Successfully',
            'alert-type' => 'success'
        );

        return redirect()->route('roles.all')->with($notification);

    }// End Method


3.blade make(এখানে আমরা সব Role দেখাব , role add করতে পারব):
	php artisan make:view backend.pages.roles.all_roles
	
	php artisan make:view backend.pages.roles.add_roles
	
	
	







--------------------------------------------6.1 Setup User Roles Part 2-----------------------------
এখানে আমরা Role edit,delete এর কাজ করব।

1.route:
Route::get('/roles/edit/{id}', 'EditPermission')->name('roles.edit');
Route::post('/roles/update', 'UpdatePermission')->name('roles.update');
Route::get('/roles/delete/{id}', 'DeletePermission')->name('roles.delete');


2.controller method:
	public function EditRoles($id){More actions

        $roles = Role::findOrFail($id);
        return view('backend.pages.roles.edit_roles',compact('roles'));

    }// End Method 

     public function UpdateRoles(Request $request){

        $role_id = $request->id;

        Role::findOrFail($role_id)->update([
            'name' => $request->name, 

        ]);

        $notification = array(
            'message' => 'Role Updated Successfully',
            'alert-type' => 'success'
        );

        return redirect()->route('roles.all')->with($notification);

    }// End Method 


     public function DeleteRoles($id){

        Role::findOrFail($id)->delete();

        $notification = array(
            'message' => 'Role Deleted Successfully',
            'alert-type' => 'success'
        );

        return redirect()->back()->with($notification);

    }// End Method 
	
	
3.blade:(এখানে role edit হবে।)
	php artisan make:view backend.pages.roles.edit_roles


4.change route in all_roles files for edit , delete
	 <td>
		<a href="{{ route('roles.edit',$item->id) }}"
		   class="btn btn-blue rounded-pill waves-effect waves-light">Edit</a>
		<a href="{{ route('roles.delete',$item->id) }}"
		   class="btn btn-danger rounded-pill waves-effect waves-light" id="delete">Delete</a>

	</td>










--------------------------------------------7. Add Roles in Permission Part 1-----------------------------
এখানে আমরা Role গুলো কোন কোন permission(মানে, কোন কোন route) access করতে পারবে তা দিব।এখানে জাস্ট blade টা দেখানো হয়েছে
পরের ভিডিওতে actual কাজ করা হয়েছে।


1.route:
	Route::get('/roles/permissions/add', 'AddRolesPermission')->name('roles.permissions.add');


3.controller method:
	 public function AddRolesPermission(){More actions

        $roles = Role::all();
        $permissions = Permission::all();
        return view('backend.pages.roles.add_roles_permission',compact('roles','permissions'));

    }// End Method 
	


3.blade make:
	php artisan make:view backend.pages.roles.add_roles_permission
	
	







----------------------------------8. Add Roles in Permission Part 2  ---------------------------
এখানে আমরা Role গুলোর জন্য সকল permission গুলো show করেছি এবং role এর permission গুলো ডাটাবেসে ঢুকাইছি।

1.এখানে controller টা পরিবর্তন করা হয়েছে:গ্রুপ আকারে permission গুলো blade এ পাঠানো হয়েছে।
	employee গ্রুপ এর সকল permission গুলো পাঠানো হয়েছে,user গ্রুপ এর সকল permission পাঠানো হয়েছে,,,,,,,,,,,
	যার ফলে সহজেই গ্রুপ এর নাম গুলো Left এ দেখাব, permission এর নাম গুলো right এ দেখাব।

	public function AddRolesPermission(){
        //need all role and all permission
        $roles = Role::all();
      
		/*Collection {
			'employee' => Collection [
				Permission { id: 1, name: 'employee.all', group_name: 'employee' },
				Permission { id: 2, name: 'employee.add', group_name: 'employee' },
			],
			'user' => Collection [
				Permission { id: 3, name: 'user.view', group_name: 'user' },
				Permission { id: 4, name: 'user.reset', group_name: 'user' },
			],
			'student' => Collection [
				Permission { id: 5, name: 'student.list', group_name: 'student' },
				Permission { id: 6, name: 'student.add', group_name: 'student' },
			]
		}*/
        $permissions = Permission::all()->groupBy('group_name');
        return view('backend.pages.roles.add_roles_permission',compact('roles','permissions'));
    }// End Method
	
2.blade এর কাজ:
		@foreach($permissions as $groupName => $groupPermissions)
			 <div class="col-3">
				group name
			 </div>
			 
				<div class="col-9">
					@foreach($groupPermissions as $permission)
						permission name
					@endforeach
				</div>
		@endforeach
		


3.<script> দিয়ে auto selection এর কাজ করা হয়েছে।




------------------------------------9. Add Roles in Permission Part 3--------------------------
এখানে permission গুলো ডাটাবেসে ঢুকাব।

1.route:
	 Route::post('/role/permission/store','StoreRolesPermission')->name('role.permission.store');
2.controller method:
	public function StoreRolesPermission(Request $request){
        $request->validate([
            'role_id' => 'required|exists:roles,id',
            'permission' => 'required|array',
            'permission.*' => 'exists:permissions,id',
        ]);

        //dd($request->role_id);
        // Get the role
        $role = Role::findOrFail($request->role_id);

        // Clear old permissions for this role(optional)
        $role->revokePermissionTo(Permission::all());

        // Assign new permissions using loop
        foreach ($request->permission as $permId) {
            $permission = Permission::findById($permId);
            $role->givePermissionTo($permission);
        }

        $notification = array(
            'message' => 'Role Permission Added Successfully',
            'alert-type' => 'success'
        );

        return redirect()->route('roles.all')->with($notification);
    }

3.change route link in form:
	<form id="myForm" method="post" action="{{  route('role.permission.store') }}"
	







---------------------------------10. Add Roles in Permission Part 4-----------------------------------
এখানে Role গুলোর জন্য কি কি permission দেয়া হয়েছে তা ‍show করাব।

1.route:
	Route::get('roles/permission/all','AllRolesPermission')->name('roles.permission.all');
	
2.controller:
	public function AllRolesPermission(){
        $roles = Role::all();
        return view('backend.pages.roles.all_roles_permission',compact('roles'));

    } // End Method 
	
	
	/*$roles → Laravel Collection of Role objects.

	Each Role object → has a permissions property.

	permissions → Collection of Permission objects (from the pivot table role_has_permissions).


	this will return:
	[
		Role{
			"id": 1,
			"name": "SuperAdmin",
			"guard_name": "web",
			"created_at": "2025-06-09T16:27:54.000000Z",
			"updated_at": "2025-06-09T16:27:54.000000Z",
			"permissions": [
			  {
				"id": 7,
				"name": "employee.all",
				"group_name": "employee",
				"guard_name": "web",
				"created_at": "2025-06-09T15:43:43.000000Z",
				"updated_at": "2025-06-09T15:43:43.000000Z",
				"pivot": {
				  "role_id": 1,
				  "permission_id": 7
				}
			  },
			  {
				"id": 8,
				"name": "employee.add",
				"group_name": "employee",
				"guard_name": "web",
				"created_at": "2025-06-09T15:43:43.000000Z",
				"updated_at": "2025-06-09T15:43:43.000000Z",
				"pivot": {
				  "role_id": 1,
				  "permission_id": 8
				}
			  }
			]
		},
		Role{
			"id": 4,
			"name": "Manager",
			"guard_name": "web",
			"created_at": "2025-06-09T16:28:52.000000Z",
			"updated_at": "2025-06-09T16:28:52.000000Z",
			"permissions": []
	    },
	    Role{
			"id": 6,
			"name": "Test",
			"guard_name": "web",
			"created_at": "2025-06-09T16:45:47.000000Z",
			"updated_at": "2025-06-09T16:45:47.000000Z",
			"permissions": []
	    }
	]*/
	
3.blade make:
	php artisan make:view backend.pages.roles.all_roles_permission
	
	 <tbody>
		@foreach($roles as $index => $role)
			<tr>
				<td>{{ $index+1 }}</td>
				<td>{{ $role->name }}</td>
				<td>
					@foreach($role->permissions as $perm)
						<span class="badge rounded-pill bg-danger"> {{ $perm->name }} </span>
					@endforeach

				</td>
				<td width="18%">
					<a href="{{ route('permission.edit',$role->id) }}" class="btn btn-blue rounded-pill waves-effect waves-light">Edit</a>
                    <a href="{{ route('permission.delete',$role->id) }}" class="btn btn-danger rounded-pill waves-effect waves-light" id="delete">Delete</a>

				</td>
			</tr>
		@endforeach
	






----------------------------------------------------11. Add Roles in Permission Part 5--------------------------
এখানে edit। role এর permission গুলো edit , delete করা যাবে।

1.route:
	Route::get('roles/permission/edit/{id}','AdminEditRoles')->name('role.permission.store.edit');
	
2.controller:
	public function EditRolePermissions($id){

        $role = Role::findOrFail($id);
        $permissions = Permission::all()->groupBy('group_name');
        return view('backend.pages.roles.edit_roles_permission',compact('role','permissions','permissions'));

    } // End Method
	
3.blade make for edit:(edit তৈরি করব add(backend.pages.roles.add_roles_permission.blade.php) কে কপি করে।)
	php artisan make:view backend.pages.roles.edit_roles_permission
	
	//যদি সবগুলো selected থাকে তাহলে select all selected থাকবে।
	@php
		$allPermissions = \Spatie\Permission\Models\Permission::pluck('id');
		$rolePermissionIds = $role->permissions->pluck('id');
		$isAllSelected = $allPermissions->diff($rolePermissionIds)->isEmpty(); // means all are assigned
	@endphp
	<div class="form-check mb-2 form-check-primary">
		<input class="form-check-input" type="checkbox" value="" id="select_all" {{ $isAllSelected ? 'checked' : '' }}>
		<label class="form-check-label" for="select_all">Primary</label>
	</div>
	
	
	//যদি  group এর সবগুলো ‍selected থাকে তাহলে group selected থাকবে।
	@php
		$allPermissions = \Spatie\Permission\Models\Permission::pluck('id');
		$rolePermissionIds = $role->permissions->pluck('id');
		$isAllSelected = $allPermissions->diff($rolePermissionIds)->isEmpty(); // means all are assigned
	@endphp
	<div class="form-check mb-2 form-check-primary">
		<input class="form-check-input" type="checkbox" value="" id="select_all" {{ $isAllSelected ? 'checked' : '' }}>
		<label class="form-check-label" for="select_all">Select All</label>
	</div>
	



	
	

	
------------------------------------------------12. Add Roles in Permission Part 6-----------------------
এখানে udpate এর কাজ করব।backend.pages.roles.edit_roles_permission এর update button এর কাজ করব।

1.route:
	Route::post('/role/permission/update/{id}','RolePermissionUpdate')->name('role.permission.update');
	
2.controller method:
	public function UpdateRolePermission(Request $request){

        //return $request->id;
        $request->validate([
            'permission' => 'required|array',
            'permission.*' => 'exists:permissions,id',
        ]);
        $role = Role::findOrFail($request->id);
        $permissions = $request->permission;

		/* $role->syncPermissions($permissionModels); eqivalent to :
				DELETE FROM role_has_permissions WHERE role_id = ?
				INSERT INTO role_has_permissions (role_id, permission_id) VALUES (?, ?), (?, ?), ...*/
				
        if (!empty($permissions)) {
            $permissionModels = Permission::whereIn('id', $permissions)->get();
            $role->syncPermissions($permissionModels);
        }

         $notification = array(
             'message' => 'Role Permission Updated Successfully',
             'alert-type' => 'success'
         );

        return redirect()->route('roles.permission.all')->with($notification);

    }// End Method
	

3.route link in edit role permission:
	  <form id="myForm" method="post" action="{{  route('role.permission.update') }}"
						



















