**********************************************************36. User Roles and Permission************************************************

--------------------------------------------------------1. Install Laravel Spatie Permission-------------------------------------------
step1: 1. Install the Package
	composer require spatie/laravel-permission

step2: 2. Publish Config & Migrations
	php artisan vendor:publish --provider="Spatie\Permission\PermissionServiceProvider"

This will create:
	config/permission.php

	Migrations for roles, permissions, and pivot tables
	
step3: 3. Run Migrations
	php artisan migrate
	
##############################################installation done#################################################




------------------------------------------------------2. Setup User Permission Part 1----------------------------------------------------
এখানে আমরা ‍permission show/add/edit/update/delete করব ।

Show এর কাজ:

কাজ শুরু করার পৃর্বে আমরা permission table কে একটু পরিবর্তন করব। group name assign করব যাতে group এ ক্লিক করলে ঐই group এর সব permission automatically select হয়।
	php artisan make:migration add_group_name_to_permissions_table


	public function up(): void
    {
        Schema::table('permissions', function (Blueprint $table) {
            $table->string('group_name')->nullable()->after('name');
        });
    }
	
	public function down(): void
    {
        Schema::table('permissions', function (Blueprint $table) {
            $table->dropColumn('group_name');
        });
    }


1.controller:
	$ php artisan make:controller RoleController

1.route:
	///Permission All Route More actions
    Route::controller(RoleController::class)->group(function(){

        Route::get('/all/permission','AllPermission')->name('all.permission');


    });
	



2.controller method:
	//showing all permission
    public function AllPermission(){

        $permissions = Permission::all();
        return view('backend.pages.permission.all_permission',compact('permissions'));

    }


//return from : $permissions = Permission::all();
Illuminate\Support\Collection {
	[
		App\Models\Permission {
			id: 1,
			name: "products.view",
			group_name: "Product",
			guard_name: "web",
			created_at: "2024-01-01 12:00:00",
			updated_at: "2024-01-01 12:00:00"
		},
		App\Models\Permission {
			id: 2,
			name: "products.create",
			group_name: "Product",
			guard_name: "web",
			created_at: "2024-01-01 12:01:00",
			updated_at: "2024-01-01 12:01:00"
		},
		// more...
	]
}

| id | name            | group\_name | guard\_name | created\_at         |
| -- | --------------- | ----------- | ----------- | ------------------- |
| 1  | products.view   | Product     | web         | 2024-01-01 12:00:00 |
| 2  | products.create | Product     | web         | 2024-01-01 12:01:00 |
| 3  | customers.view  | Customer    | web         | 2024-01-01 12:02:00 |
| 4  | suppliers.edit  | Supplier    | web         | 2024-01-01 12:03:00 |


	
3.view all permission in blade:(উপরের permission table এর ডাটাগুলো blade এ show করাব:)
	$ php artisan make:view backend.pages.permission.all_permission

4.blade view:(all this data show in  blade)(guard_name is web by default)


5.sidebar এ মেনুগুলো তৈরি করব।
	<li>
		<a href="#permission" data-bs-toggle="collapse">
			<i class="mdi mdi-email-multiple-outline"></i>
			<span> Roles And Permission  </span>
			<span class="menu-arrow"></span>
		</a>
		<div class="collapse" id="permission">
			<ul class="nav-second-level">
				<li>
					<a href="{{ route('all.permission') }}">All Permission </a>
				</li>

			</ul>
		</div>
	</li>


	
	

--------------------------------------------3. Setup User Permission Part 2-----------------------------------
এখানে all_permission.blade এ থাকা 'Add Permission' এ ক্লিক করলে নতুন একটি blade open হবে এবং এখান থেকে সব permission দেয়া যাবে।
permission গুলো permission table এ store হবে।


1.route :
	Route::get('/add/permission','AddPermission')->name('add.permission');
	Route::post('/store/permission','StorePermission')->name('permission.store');

2.controller method:
	
	//permission group name show
	public function AddPermission(){
        return view('backend.pages.permission.add_permission');
    } // End Method


	//after selecting group name,permission name data store into permission table
    public function StorePermission(Request $request){


		//this method from spaite for create permission
        $role = Permission::create([
            'name' => $request->name,
            'group_name' => $request->group_name,

        ]);

        $notification = array(
            'message' => 'Permission Added Successfully',
            'alert-type' => 'success'
        );

        return redirect()->route('all.permission')->with($notification);

    }// End Method
	

3.make view:(এখান থেকে মূলত permission গুলো প্রদর্শন এবং স্টোর এর কাজ করব।)
	 php artisan make:view backend.pages.permission.add_permission
	 
	 



----------------------------------------------------------------------------------
এখানে আমরা web.php file কে আপডেট করছি।যাতে করে গ্রুপিং সহজে করা যায়।
সব project এ আমরা এভাবে routing করব।





------------------------------here we send all permission to database using database seeder---------------------
1.seeder
	php artisan make:seeder PermissionSeeder
This will create a file at:
	database/seeders/PermissionSeeder.php
	

2.সব permission গুলো PermissionSeeder.php তে দিয়ে দিব:
	class PermissionSeeder extends Seeder
	{
		public function run(): void
		{
			$permissions = [
				// Employee
				['name' => 'employee.all', 'group_name' => 'employee'],
				['name' => 'employee.add', 'group_name' => 'employee'],
				['name' => 'employee.store', 'group_name' => 'employee'],
				['name' => 'employee.edit', 'group_name' => 'employee'],
				['name' => 'employee.update', 'group_name' => 'employee'],
				['name' => 'employee.delete', 'group_name' => 'employee'],
				
				---
				---
			
			foreach ($permissions as $permission) {
				Permission::create([
					'name' => $permission['name'],
					'group_name' => $permission['group_name'],
					'guard_name' => 'web',
					'created_at' => Carbon::now(),
				]);
			}
		}
	}
	

3.run:
	php artisan db:seed --class=PermissionSeeder




-------------------------------------------------4. Setup User Permission Part 3----------------------
এখানে আমরা permission edit/update/delete করব।

1.route:
	 Route::get('/permission/edit/{id}','EditPermission')->name('permission.edit');
     Route::post('/permission/update','UpdatePermission')->name('permission.update');
     Route::get('/permission/delete/{id}','DeletePermission')->name('permission.delete');
	 
2.edit,update,delete এর জন্য method:
	 public function EditPermission($id)
    {

        $permission = Permission::findOrFail($id);
        return view('backend.pages.permission.edit_permission', compact('permission'));

    }// End Method

    public function UpdatePermission(Request $request)
    {

        $per_id = $request->id;

        Permission::findOrFail($per_id)->update([
            'name' => $request->name,
            'group_name' => $request->group_name,

        ]);

        $notification = array(
            'message' => 'Permission Updated Successfully',
            'alert-type' => 'success'
        );

        return redirect()->route('all.permission')->with($notification);

    }// End Method


    public function DeletePermission($id)
    {

        Permission::findOrFail($id)->delete();

        $notification = array(
            'message' => 'Permission Deleted Successfully',
            'alert-type' => 'success'
        );

        return redirect()->back()->with($notification);

    }// End Method
	

3.এখন blade বানাব edit করার জন্য:
	php artisan make:view backend.pages.permission.edit_permission
	
4.all_permission.blade এ route গুলো পরিবর্তন করে দিব:
	<td>
		<a href="{{ route('permission.edit',$item->id) }}" class="btn btn-blue rounded-pill waves-effect waves-light">Edit</a>
		<a href="{{ route('permission.delete',$item->id) }}" class="btn btn-danger rounded-pill waves-effect waves-light" id="delete">Delete</a>

	</td>
	
	










----------------------------------------------------5. Setup User Roles Part 1---------------------------------------------
এখানে permission এর মত Role Add করা হবে। যেহেতু এখানে শুধুমাত্র 'name' field add করতে হবে তাই Blade দিয়ে add করব।



1.route:
	Route::get('/all/roles','AllRoles')->name('all.roles');More actions
	Route::get('/add/roles','AddRoles')->name('add.roles');
	Route::post('/store/roles','StoreRoles')->name('roles.store');
	


2.controller method:
	public function AllRoles()
    {

        $roles = Role::all();
        return view('backend.pages.roles.all_roles', compact('roles'));

    }// End Method


    public function AddRoles()
    {

        return view('backend.pages.roles.add_roles');

    }// End Method


    public function StoreRoles(Request $request)
    {

        $role = Role::create([
            'name' => $request->name,

        ]);

        $notification = array(
            'message' => 'Role Added Successfully',
            'alert-type' => 'success'
        );

        return redirect()->route('roles.all')->with($notification);

    }// End Method


3.blade make(এখানে আমরা সব Role দেখাব , role add করতে পারব):
	php artisan make:view backend.pages.roles.all_roles
	
	php artisan make:view backend.pages.roles.add_roles
	
	
	







--------------------------------------------6.1 Setup User Roles Part 2-----------------------------
এখানে আমরা Role edit,delete এর কাজ করব।

1.route:
Route::get('/roles/edit/{id}', 'EditPermission')->name('roles.edit');
Route::post('/roles/update', 'UpdatePermission')->name('roles.update');
Route::get('/roles/delete/{id}', 'DeletePermission')->name('roles.delete');


2.controller method:
	public function EditRoles($id){More actions

        $roles = Role::findOrFail($id);
        return view('backend.pages.roles.edit_roles',compact('roles'));

    }// End Method 

     public function UpdateRoles(Request $request){

        $role_id = $request->id;

        Role::findOrFail($role_id)->update([
            'name' => $request->name, 

        ]);

        $notification = array(
            'message' => 'Role Updated Successfully',
            'alert-type' => 'success'
        );

        return redirect()->route('roles.all')->with($notification);

    }// End Method 


     public function DeleteRoles($id){

        Role::findOrFail($id)->delete();

        $notification = array(
            'message' => 'Role Deleted Successfully',
            'alert-type' => 'success'
        );

        return redirect()->back()->with($notification);

    }// End Method 
	
	
3.blade:(এখানে role edit হবে।)
	php artisan make:view backend.pages.roles.edit_roles


4.change route in all_roles files for edit , delete
	 <td>
		<a href="{{ route('roles.edit',$item->id) }}"
		   class="btn btn-blue rounded-pill waves-effect waves-light">Edit</a>
		<a href="{{ route('roles.delete',$item->id) }}"
		   class="btn btn-danger rounded-pill waves-effect waves-light" id="delete">Delete</a>

	</td>






















